namespace NumbatLogic
{
	class MemberClassDecl : AST
	{
		public ClassDecl m_pParentClassDecl;
		public AccessLevel m_pAccessLevel;
		public ClassDecl m_pClassDecl;
		
		public construct()
		{
			m_eType = AST::Type::AST_MEMBER_CLASS_DECL;
			m_bCanDescend = true;
		}
		
		public static MemberClassDecl** TryCreate(TokenContainer pTokenContainer, OffsetDatum pOffsetDatum, ClassDecl pParentClassDecl)
		{
			OffsetDatum* pTempOffset = own OffsetDatum::Create(pOffsetDatum);

			AccessLevel* pAccessLevel = own AccessLevel::TryCreate(pTokenContainer, pTempOffset);
			if (pAccessLevel == null)
				return null;

			MemberClassDecl* pMemberClassDecl = own new MemberClassDecl();
			//pMemberClassDecl.m_pParent = pParentClassDecl;
			pMemberClassDecl.m_pParentClassDecl = pParentClassDecl;
			pMemberClassDecl.m_pAccessLevel = pAccessLevel;
			pMemberClassDecl.m_pFirstToken = pAccessLevel.m_pFirstToken;
			

			ClassDecl* pClassDecl = own ClassDecl::TryCreate(pTokenContainer, pTempOffset, pMemberClassDecl);
			if (pClassDecl == null)
				return null;

			pMemberClassDecl.AddChild(disown pAccessLevel);

			pMemberClassDecl.m_pClassDecl = pClassDecl;
			pMemberClassDecl.AddChild(disown pClassDecl);

			pOffsetDatum.Set(pTempOffset);
			return disown pMemberClassDecl;
		}

		public override void Validate(Validator pValidator, OperatorExpr pParent)
		{
			base.Validate(pValidator, pParent);
		}

		public override void Stringify(Language eLanguage, OutputFile eOutputFile, int nDepth, InternalString sOut)
		{
			// bool bGeneric = m_pParentClassDecl.m_pGenericTypeDeclVector.GetSize() > 0;
			
			/*if (eLanguage == AST::Language::CPP && eOutputFile == AST::OutputFile::SOURCE)
			{
				if (m_pParentClassDecl.m_pGenericTypeDeclVector.GetSize() > 0)
				{
					// is function generic?
					//		sOut.AppendChar(':');

				}
			}*/

			Util::Pad(nDepth, sOut);

			if (!(eLanguage == AST::Language::CPP && eOutputFile == AST::OutputFile::SOURCE))
			{
				m_pAccessLevel.Stringify(eLanguage, eOutputFile, 0, sOut);

				if (eLanguage == AST::Language::CPP)
					sOut.AppendChar(':');

				sOut.AppendChar(' ');
			}

			m_pClassDecl.Stringify(eLanguage, eOutputFile, nDepth, sOut);
		}
	}
}